FUNC(% !exists sc::RETURN_TYPE default("void") %, % !api::ID_PREFIX %_CODE) % !exists sc::ACTUAL default(sc::NAME) %(%
    if exists sc::ARGUMENT then
      foreach arg in sc::ARGUMENT do
         !arg::KIND %(% !arg::TYPE %, AUTOMATIC%
          if [arg::KIND substringExists: "P2"] then
            %, OS_APPL_DATA%
          end if
        %) % !arg::NAME 
      between %,%
      end foreach %)%
    else %void)%
    end if %
{
  %
  let argCount := 3
  if exists sc::ARGUMENT  then
    let argCount := 3 - [sc::ARGUMENT length]
  end if
  %
  slow_task(%
    foreach arg in exists sc::ARGUMENT  default (emptylist) do
       % (void*) &% !arg::NAME 
    between
      %,%
    after
      %,%
    end foreach 
    loop dummy from 1 to argCount
    do
      %NULL%
    between
      %,%
    after
      %,%
    end loop
    !api::ID_PREFIX %ServiceId_% !sc::NAME %);
%
  if exists sc::RETURN_TYPE then%
  % !sc::RETURN_TYPE % res = %
  end if
  !sc::KERNEL %(%
  foreach arg in exists sc::ARGUMENT default (emptylist) do
    !arg::NAME
  between %, %
  end foreach
  %);

  compute_NEFT(%
    foreach arg in exists sc::ARGUMENT  default (emptylist) do 
       % (void*) &% !arg::NAME 
    between
      %,%
    after
      %,%
    end foreach 
    loop dummy from 1 to argCount
    do
      %NULL%
    between
      %,%
    after
      %,%
    end loop
    !api::ID_PREFIX %ServiceId_% !sc::NAME %);
  
  %if exists sc::RETURN_TYPE then%
  return res;
  %end if%
}
